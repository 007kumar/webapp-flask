name: Flask CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging

jobs:
  install_dependencies:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

  run_tests:
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests with pytest
      run: |
        pytest --maxfail=1 --disable-warnings -q

  build_and_deploy:
    runs-on: ubuntu-latest
    needs: run_tests
    if: success()
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build the app
      run: |
        echo "Building the Flask application for deployment..."

    - name: Deploy to Staging
      run: |
        echo "Deploying application to staging environment"
        # Replace with actual deployment script or command
        # Example for Heroku:
        # heroku deploy --app your-app-name
        # Example for AWS (using AWS CLI):
        # aws s3 cp build/ s3://your-bucket-name/ --recursive

  notify_success:
    runs-on: ubuntu-latest
    needs: build_and_deploy
    if: success()
    steps:
    - name: Notify via Slack (success)
      uses: slackapi/slack-github-action@v1.20.0
      with:
        slack_token: ${{ secrets.SLACK_TOKEN }}
        channel: '#your-channel'
        text: 'Flask app deployment to staging was successful!'

  notify_failure:
    runs-on: ubuntu-latest
    if: failure()
    steps:
    - name: Notify via Slack (failure)
      uses: slackapi/slack-github-action@v1.20.0
      with:
        slack_token: ${{ secrets.SLACK_TOKEN }}
        channel: '#your-channel'
        text: 'Flask app deployment to staging failed. Please check the logs for details.'
